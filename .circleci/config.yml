version: 2.1
orbs:
  vm-install-tools: entur/vm-install-tools@0.0.6
  slack: circleci/slack@3.4.2
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01

    resource_class: large

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - vm-install-tools/install-java11

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Start containers and run tests
          command: |
            # download containers
            wget https://download.memgraph.com/memgraph/v1.0.0/docker/memgraph-1.0.0-community-docker.tar.gz
            docker pull neo4j:3.5
            #docker pull docker.tigergraph.com/tigergraph-dev:latest
            # Memgraph
            docker load -i memgraph-1.0.0-community-docker.tar.gz
            docker run -d -p 17687:7687 memgraph
            # Neo4j
            docker run -d -p 7474:7474 -p 7687:7687 --env=NEO4J_AUTH=none neo4j:3.5
            ./gradlew test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit     

      - slack/status
